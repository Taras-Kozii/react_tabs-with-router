{"version":3,"sources":["components/PageNavLink.tsx","components/MainNav.tsx","App.tsx","api/api.tsx","components/Tabs.tsx","pages/TabsPage.tsx","index.tsx"],"names":["PageNavLink","to","text","className","isActive","classNames","MainNav","App","tabsFromServer","id","title","content","Tabs","tabs","selectedTab","findTab","find","item","map","tab","TabsPage","useParams","tabId","ReactDOM","render","path","element","index","replace","document","getElementById"],"mappings":"kPAQaA,EAA+B,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,GAAIC,EAAW,EAAXA,KACjD,OACE,cAAC,IAAD,CACED,GAAIA,EACJE,UAAW,gBAAGC,EAAH,EAAGA,SAAH,OAAkBC,IAC3B,cAAe,CAAE,YAAaD,KAHlC,SAMGF,KCdMI,EAAU,kBACrB,qBACEH,UAAU,oDACV,UAAQ,MAFV,SAIE,qBAAKA,UAAU,YAAf,SACE,sBAAKA,UAAU,eAAf,UACE,cAAC,EAAD,CAAaF,GAAG,IAAIC,KAAK,SACzB,cAAC,EAAD,CAAaD,GAAG,OAAOC,KAAK,iBCJvBK,EAAM,kBACjB,qCACE,cAAC,EAAD,IACA,qBAAKJ,UAAU,UAAf,SACE,qBAAKA,UAAU,YAAf,SACE,cAAC,IAAD,YCXKK,EAAiB,CAC5B,CAAEC,GAAI,QAASC,MAAO,QAASC,QAAS,eACxC,CAAEF,GAAI,QAASC,MAAO,QAASC,QAAS,eACxC,CAAEF,GAAI,QAASC,MAAO,QAASC,QAAS,gBCM7BC,EAAwB,SAAC,GAA2B,IAAzBC,EAAwB,EAAxBA,KAAMC,EAAkB,EAAlBA,YACtCC,EAA2BF,EAAKG,MAAK,SAAAC,GAAI,OAAIA,EAAKR,KAAOK,KAE/D,OACE,qCACE,qBAAKX,UAAU,gBAAf,SACE,6BACGU,EAAKK,KAAI,SAAAC,GAAG,OACX,oBACEhB,UAAWE,IAAW,GACpB,CAAE,YAAaS,IAAgBK,EAAIV,KACrC,UAAQ,MAHV,SAME,cAAC,IAAD,CACER,GAAE,gBAAWkB,EAAIV,IACjB,UAAQ,UAFV,SAIGU,EAAIT,SANFS,EAAIV,WAajB,qBAAKN,UAAU,QAAQ,UAAQ,aAA/B,SACGY,EAAUA,EAAQJ,QAAU,4BC/BxBS,EAAW,WACtB,MAAuBC,cAAfC,aAAR,MAAgB,GAAhB,EAEA,OACE,qCACE,oBAAInB,UAAU,QAAd,uBACA,cAAC,EAAD,CAAMU,KAAML,EAAgBM,YAAaQ,QCA/CC,IAASC,OACP,cAAC,IAAD,UACE,cAAC,IAAD,UACE,eAAC,IAAD,CAAOC,KAAK,IAAIC,QAAS,cAAC,EAAD,IAAzB,UACE,cAAC,IAAD,CAAOC,OAAK,EAACD,QAAS,oBAAIvB,UAAU,QAAd,yBACtB,cAAC,IAAD,CAAOsB,KAAK,OAAOC,QAAS,cAAC,IAAD,CAAUzB,GAAG,IAAI2B,SAAO,MAEpD,eAAC,IAAD,CAAOH,KAAK,OAAZ,UACE,cAAC,IAAD,CAAOE,OAAK,EAACD,QAAS,cAAC,EAAD,MACtB,cAAC,IAAD,CAAOD,KAAK,SAASC,QAAS,cAAC,EAAD,SAGhC,cAAC,IAAD,CAAOD,KAAK,IAAIC,QAAS,oBAAIvB,UAAU,QAAd,qCAI/B0B,SAASC,eAAe,W","file":"static/js/main.a3debcdf.chunk.js","sourcesContent":["import { NavLink } from 'react-router-dom';\nimport classNames from 'classnames';\n\nexport type Props = {\n  to: string;\n  text: string;\n};\n\nexport const PageNavLink: React.FC<Props> = ({ to, text }) => {\n  return (\n    <NavLink\n      to={to}\n      className={({ isActive }) => classNames(\n        'navbar-item', { 'is-active': isActive },\n      )}\n    >\n      {text}\n    </NavLink>\n  );\n};\n","import { PageNavLink } from './PageNavLink';\n\nexport const MainNav = () => (\n  <nav\n    className=\"navbar is-light is-fixed-top is-mobile has-shadow\"\n    data-cy=\"Nav\"\n  >\n    <div className=\"container\">\n      <div className=\"navbar-brand\">\n        <PageNavLink to=\"/\" text=\"Home\" />\n        <PageNavLink to=\"tabs\" text=\"Tabs\" />\n      </div>\n    </div>\n  </nav>\n);\n","import 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\nimport './App.scss';\nimport { Outlet } from 'react-router-dom';\nimport { MainNav } from './components/MainNav';\n\nexport const App = () => (\n  <>\n    <MainNav />\n    <div className=\"section\">\n      <div className=\"container\">\n        <Outlet />\n      </div>\n    </div>\n  </>\n);\n","export const tabsFromServer = [\n  { id: 'tab-1', title: 'Tab 1', content: 'Some text 1' },\n  { id: 'tab-2', title: 'Tab 2', content: 'Some text 2' },\n  { id: 'tab-3', title: 'Tab 3', content: 'Some text 3' },\n];\n","import { Link } from 'react-router-dom';\nimport classNames from 'classnames';\nimport { Tab } from '../types/Tab';\n\nexport type Props = {\n  tabs: Tab[],\n  selectedTab: string,\n};\n\nexport const Tabs: React.FC<Props> = ({ tabs, selectedTab }) => {\n  const findTab: Tab | undefined = tabs.find(item => item.id === selectedTab);\n\n  return (\n    <>\n      <div className=\"tabs is-boxed\">\n        <ul>\n          {tabs.map(tab => (\n            <li\n              className={classNames('',\n                { 'is-active': selectedTab === tab.id })}\n              data-cy=\"Tab\"\n              key={tab.id}\n            >\n              <Link\n                to={`/tabs/${tab.id}`}\n                data-cy=\"TabLink\"\n              >\n                {tab.title}\n              </Link>\n            </li>\n          ))}\n        </ul>\n      </div>\n\n      <div className=\"block\" data-cy=\"TabContent\">\n        {findTab ? findTab.content : 'Please select a tab'}\n      </div>\n    </>\n  );\n};\n","import { useParams } from 'react-router-dom';\nimport { tabsFromServer } from '../api/api';\nimport { Tabs } from '../components/Tabs';\n\nexport const TabsPage = () => {\n  const { tabId = '' } = useParams();\n\n  return (\n    <>\n      <h1 className=\"title\">Tabs page</h1>\n      <Tabs tabs={tabsFromServer} selectedTab={tabId} />\n    </>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport {\n  HashRouter,\n  Navigate,\n  Route,\n  Routes,\n} from 'react-router-dom';\nimport { App } from './App';\nimport { TabsPage } from './pages/TabsPage';\n\nReactDOM.render(\n  <HashRouter>\n    <Routes>\n      <Route path=\"/\" element={<App />}>\n        <Route index element={<h1 className=\"title\">Home page</h1>} />\n        <Route path=\"home\" element={<Navigate to=\"/\" replace />} />\n\n        <Route path=\"tabs\">\n          <Route index element={<TabsPage />} />\n          <Route path=\":tabId\" element={<TabsPage />} />\n        </Route>\n\n        <Route path=\"*\" element={<h1 className=\"title\">Page not found</h1>} />\n      </Route>\n    </Routes>\n  </HashRouter>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}